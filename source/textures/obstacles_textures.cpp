#include "textures.h"

Nothofagus::ColorPallete palleteHydrant{
    {0.0, 0.0, 0.0, 0.0}, // transparente
    {1.0, 0.0, 0.0, 1.0},
    {0.8, 0.0, 0.0, 1.0}
    
};
Nothofagus::Texture setupHydrantTextures(){
    Nothofagus::Texture textureHydrant({ 16, 16 }, { 0.5, 0.5, 0.5, 1.0 });
    textureHydrant.setPallete(palleteHydrant)
        .setPixels(
            {
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
                0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,
                0,0,0,1,1,1,2,1,1,2,1,1,1,0,0,0,
                0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,2,2,2,2,2,2,2,2,0,0,0,0,
                0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            }
        );
    return textureHydrant;
};

Nothofagus::ColorPallete palleteTree{
    {0.0, 0.0, 0.0, 0.0}, // transparente
    {0.3, 0.1, 0.0, 1.0},
    {0.0, 0.6, 0.2, 1.0}
};

Nothofagus::Texture setupTreeTextures(){
    Nothofagus::Texture textureTree({20, 32}, { 0.5, 0.5, 0.5, 1.0 });
    textureTree.setPallete(palleteTree)
        .setPixels(
            {
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,
                0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,
                0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,
                0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
                0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
                0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
                0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
                0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,
                0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,
                0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,
                0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,
                0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,
                0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,
                0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
                0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,
                0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,
                0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,
                0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            }
        );
    return textureTree;
};

Nothofagus::ColorPallete palleteRamp{
    {0.0, 0.0, 0.0, 0.0}, // transparente
    {0.95, 0.05, 0.05, 1.0},
    {1.0, 0.0, 0.0, 1.0},
    {1.0, 1.0, 0.0, 1.0},
    {0.0, 1.0, 0.0, 1.0},
    {0.0, 0.0, 1.0, 1.0},
    {0.0, 0.0, 0.8, 1.0},
    {0.8, 0.0, 0.9, 1.0},
    {1.0, 0.0, 1.0, 1.0},
};

Nothofagus::Texture setupRampTextures(){
    Nothofagus::Texture textureRamp({30, 10}, { 0.5, 0.5, 0.5, 1.0 });
    textureRamp.setPallete(palleteRamp)
        .setPixels(
            {
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
                2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
                3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
                4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
                5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
                6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
                7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
                8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            }
        );
    return textureRamp;
};

